[{"C:\\Users\\DELL\\OneDrive - Shri Vile Parle Kelavani Mandal\\Desktop\\Codes\\dragable\\src\\index.js":"1","C:\\Users\\DELL\\OneDrive - Shri Vile Parle Kelavani Mandal\\Desktop\\Codes\\dragable\\src\\App.js":"2","C:\\Users\\DELL\\OneDrive - Shri Vile Parle Kelavani Mandal\\Desktop\\Codes\\dragable\\src\\reportWebVitals.js":"3","C:\\Users\\DELL\\OneDrive - Shri Vile Parle Kelavani Mandal\\Desktop\\Codes\\dragable\\src\\components\\Dashboard\\DragDrop.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":367,"mtime":1612925632870,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":5823,"mtime":1612930233283,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"v8b457",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\DELL\\OneDrive - Shri Vile Parle Kelavani Mandal\\Desktop\\Codes\\dragable\\src\\index.js",[],["20","21"],"C:\\Users\\DELL\\OneDrive - Shri Vile Parle Kelavani Mandal\\Desktop\\Codes\\dragable\\src\\App.js",[],"C:\\Users\\DELL\\OneDrive - Shri Vile Parle Kelavani Mandal\\Desktop\\Codes\\dragable\\src\\reportWebVitals.js",[],"C:\\Users\\DELL\\OneDrive - Shri Vile Parle Kelavani Mandal\\Desktop\\Codes\\dragable\\src\\components\\Dashboard\\DragDrop.js",["22"],"\r\nimport React, { useState } from \"react\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport {v4 as uuid} from \"uuid\";\r\nimport M from 'materialize-css';\r\n\r\n\r\nconst itemsFromBackend = [\r\n  { id: uuid(), content: \"First task\" },\r\n  { id: uuid(), content: \"Second task\" },\r\n  { id: uuid(), content: \"Third task\" },\r\n  { id: uuid(), content: \"Fourth task\" },\r\n  { id: uuid(), content: \"Fifth task\" }\r\n];\r\n\r\nconst columnsFromBackend = {\r\n  [uuid()]: {\r\n    name: \"Requested\",\r\n    items: itemsFromBackend\r\n  },\r\n  [uuid()]: {\r\n    name: \"To do\",\r\n    items: []\r\n  },\r\n  [uuid()]: {\r\n    name: \"In Progress\",\r\n    items: []\r\n  },\r\n  [uuid()]: {\r\n    name: \"Done\",\r\n    items: []\r\n  }\r\n};\r\n\r\nconst onDragEnd = (result, columns, setColumns) => {\r\n  if (!result.destination) return;\r\n  const { source, destination } = result;\r\n\r\n  if (source.droppableId !== destination.droppableId) {\r\n    const sourceColumn = columns[source.droppableId];\r\n    const destColumn = columns[destination.droppableId];\r\n    const sourceItems = [...sourceColumn.items];\r\n    const destItems = [...destColumn.items];\r\n    const [removed] = sourceItems.splice(source.index, 1);\r\n    destItems.splice(destination.index, 0, removed);\r\n    setColumns({\r\n      ...columns,\r\n      [source.droppableId]: {\r\n        ...sourceColumn,\r\n        items: sourceItems\r\n      },\r\n      [destination.droppableId]: {\r\n        ...destColumn,\r\n        items: destItems\r\n      }\r\n    });\r\n  } else {\r\n    const column = columns[source.droppableId];\r\n    const copiedItems = [...column.items];\r\n    const [removed] = copiedItems.splice(source.index, 1);\r\n    copiedItems.splice(destination.index, 0, removed);\r\n    setColumns({\r\n      ...columns,\r\n      [source.droppableId]: {\r\n        ...column,\r\n        items: copiedItems\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  const [columns, setColumns] = useState(columnsFromBackend);\r\n  return (\r\n    <>\r\n    <div style={{ position: \"fixed\", bottom: \"20px\", right: \"20px\" }}>\r\n        <a className=\"btn-floating btn-large red modal-trigger\" href=\"#modal1\"><i className=\"material-icons\">add</i></a>\r\n    </div>\r\n    <div style={{ display: \"flex\", justifyContent: \"center\", height: \"100%\" }}>\r\n      <DragDropContext\r\n        onDragEnd={result => onDragEnd(result, columns, setColumns)}\r\n      >\r\n        {Object.entries(columns).map(([columnId, column], index) => {\r\n          return (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\"\r\n              }}\r\n              key={columnId}\r\n            >\r\n              <h2>{column.name}</h2>\r\n              <div style={{ margin: 8 }}>\r\n                <Droppable droppableId={columnId} key={columnId}>\r\n                  {(provided, snapshot) => {\r\n                    return (\r\n                      <div\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef}\r\n                        style={{\r\n                          background: snapshot.isDraggingOver\r\n                          ? \"transparent\"\r\n                          : \"transparent\",\r\n                          padding: 4,\r\n                          width: 250,\r\n                          minHeight: 500\r\n                        }}\r\n                      >\r\n                        {column.items.map((item, index) => {\r\n                          return (\r\n                            <Draggable\r\n                              key={item.id}\r\n                              draggableId={item.id}\r\n                              index={index}\r\n                            >\r\n                              {(provided, snapshot) => {\r\n                                return (\r\n                                  <div\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    {...provided.dragHandleProps}\r\n                                    style={{\r\n                                      userSelect: \"none\",\r\n                                      padding: 16,\r\n                                      margin: \"0 0 8px 0\",\r\n                                      minHeight: \"50px\",\r\n                                       color: \"white\",\r\n                                      ...provided.draggableProps.style\r\n                                    }}\r\n                                  >\r\n                                     <div className=\"col s12 \">\r\n                                    <div className=\"card \" style={{ borderRadius:\"20px\",backgroundColor:'#19202D',margin:0}}>\r\n                                      <div className=\"card-content white-text\">\r\n                                        <span className=\"card-title\">________________________</span>\r\n                                        <p color=\"red\"> {item.content}</p>\r\n                                      </div>\r\n                                      <div className=\"card-action \"style={{ borderRadius:\"20px\",padding:'1px 24px'}}>\r\n                                      <p className=\"red-text\"> {\"create by\"} </p>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                  </div>\r\n                                );\r\n                              }}\r\n                            </Draggable>\r\n                          );\r\n                        })}\r\n                        {provided.placeholder}\r\n                      </div>\r\n                    );\r\n                  }}\r\n                </Droppable>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </DragDropContext>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":5,"column":8,"nodeType":"29","messageId":"30","endLine":5,"endColumn":9},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'M' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]